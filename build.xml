<?xml version="1.0"?>
<project name="ykreporter" basedir="." default="cljar-cats">

  <!-- build.number and version -->
  <property file="./build.properties"/>

  <property name="dir" 
            value="."/>
  <property name="source.dir" 
            value="src"/>
  <property name="class.dir" 
            value="classes"/>
  <property name="lib.dir" 
            value="lib"/>
  <property name="resource.dir" 
            value="resources"/>
  <property name="build.dir" 
            value="build"/>
  <property name="jarname.gui" 
            value="jfreq"/>
  <property name="jarname.cl.cats" 
            value="ykreporter"/>
  <property name="jarname.cl.words" 
            value="ykwordcounter"/>
  <property name="jarname.cl.conc" 
	        value="ykconcordancer"/>
  <property name="main.class.cl.cats" 
            value="org.conjugateprior.ca.ui.CommandLineCategoryCounter"/>
  <property name="main.class.cl.words" 
	            value="org.conjugateprior.ca.ui.CommandLineWordCounter"/>
  <property name="main.class.gui" 
	            value="org.conjugateprior.ca.ui.GraphicalWordCounter"/>
  <property name="main.class.cl.conc" 
	            value="org.conjugateprior.ca.ui.CommandLineConcordancer"/>

  <path id="project.class.path">
    <pathelement location="${class.root}" />
    <fileset dir="${lib.dir}">
      <include name="*.jar" />
    </fileset>
  </path>
  
  <target name="clean" 
          description="Removes classes, temporary directories, and targets">
    <delete dir="${class.dir}" />
    <delete dir="${build.dir}" />
    <delete file="${jarname.cl.words}-${version}.jar" />
    <delete file="${jarname.cl.cats}-${version}.jar" />
    <delete file="${jarname.gui}-${version}.jar" />
  </target>

  <target name="bundle-gui" depends="gui-jar">
    <taskdef name="bundleapp"
             classname="com.oracle.appbundler.AppBundlerTask"   
             classpath="../../code/java/appbundler-1.0ea.jar" />

    <bundleapp outputdirectory="."
               name="JFreq"
               displayname="JFreq"
	       executableName="JFreq"
	       identifier="org.conjugateprior.ca"
	       shortversion="${version}"
	       version="${version}"
	       icon="resources/icons/jfreq.icns"
	       mainclassname="org.conjugateprior.ca.ui.GraphicalWordCounter"
	       copyright="Will Lowe, 2011-2014">
      
      <classpath file="${jarname.gui}-${version}.jar" />
      
      <!-- <runtime dir="${runtime}/Contents/Home"/>

      <arch name="x86_64"/>
      <arch name="i386"/> -->

      <!-- Workaround since the icon parameter for bundleapp doesn't work -->
      <option value="-Xdock:icon=Contents/Resources/jfreq.icns"/>
      <option value="-Dapple.laf.useScreenMenuBar=true"/>
      <option value="-Dcom.apple.macos.use-file-dialog-packages=true"/>
      <option value="-Dcom.apple.macos.useScreenMenuBar=true"/>
      <option value="-Dcom.apple.mrj.application.apple.menu.about.name=JFreq"/>
      <option value="-Dcom.apple.smallTabs=true"/>
      <option value="-Dfile.encoding=UTF-8"/>
      <option value="-Xmx1024M" name="Xmx"/>
    </bundleapp>
  </target>

  <target name="compile" 
          depends="clean"
          description="Compiles all Java classes">
    <mkdir dir="${class.dir}" />
    <javac srcdir="${source.dir}" 
           destdir="${class.dir}" 
           debug="on" 
    	   optimize="off" 
           deprecation="on" 
           classpathref="project.class.path"
           source="1.8" 
           target="1.8"
    	   includeantruntime="false"/>
  </target>
 
  <target name="cljar-words" 
	  description="Creates the ykwordcounter, a command line word counter"
	  depends="compile">
    
    <!-- make and populate the build directory -->
    <mkdir dir="${build.dir}" />
    <unzip dest="${build.dir}">
      <patternset>
	<include name="**/*" />
	<exclude name="META-INF/*" />
      </patternset>
      <fileset dir="${lib.dir}">
	<include name="*.jar" />
      </fileset>
    </unzip>
    
    <!-- add classes -->
    <copy todir="${build.dir}">
    	<fileset dir="${class.dir}" includes="**" />
        <fileset dir="${basedir}" includes="${resource.dir}/**" />
    </copy>
    
    <!-- construct the jar -->
    <jar destfile="${jarname.cl.words}-${version}.jar" 
         basedir="${build.dir}">
      <manifest>
	<attribute name="Main-Class" 
		   value="${main.class.cl.words}" />
      </manifest>
    </jar>
  </target>

  <target name="gui-jar" 
	  description="Creates the JFreq, a graphical word or category counter"
	  depends="compile">
    
    <!-- make and populate the build directory -->
    <mkdir dir="${build.dir}" />
    <unzip dest="${build.dir}">
      <patternset>
	<include name="**/*" />
	<exclude name="META-INF/*" />
      </patternset>
      <fileset dir="${lib.dir}">
	<include name="*.jar" />
      </fileset>
    </unzip>
    
    <!-- add classes -->
    <copy todir="${build.dir}">
    	<fileset dir="${class.dir}" includes="**" />
        <fileset dir="${basedir}" includes="${resource.dir}/**" />
    </copy>
    
    <!-- construct the jar -->
    <jar destfile="${jarname.gui}-${version}.jar" 
         basedir="${build.dir}">
      <manifest>
	<attribute name="Main-Class" 
		   value="${main.class.gui}" />
      </manifest>
    </jar>
  </target>

  <target name="cljar-cats" 
	  description="Creates the ykreporter, a command line category counter"
	  depends="compile">
    
    <!-- make and populate the build directory -->
    <mkdir dir="${build.dir}" />
    <unzip dest="${build.dir}">
      <patternset>
	<include name="**/*" />
	<exclude name="META-INF/*" />
      </patternset>
      <fileset dir="${lib.dir}">
	<include name="*.jar" />
      </fileset>
    </unzip>
    
    <!-- add classes -->
    <copy todir="${build.dir}">
    	<fileset dir="${class.dir}" includes="**" />
        <fileset dir="${basedir}" includes="${resource.dir}/**" />
    </copy>
    
    <!-- construct the jar -->
    <jar destfile="${jarname.cl.cats}-${version}.jar" 
         basedir="${build.dir}">
      <manifest>
	<attribute name="Main-Class" 
		   value="${main.class.cl.cats}" />
      </manifest>
    </jar>
  </target>
  
	  <target name="cljar-conc" 
		  description="Creates the ykconcordancer, a command line concordancer"
		  depends="compile">
	    
	    <!-- make and populate the build directory -->
	    <mkdir dir="${build.dir}" />
	    <unzip dest="${build.dir}">
	      <patternset>
		<include name="**/*" />
		<exclude name="META-INF/*" />
	      </patternset>
	      <fileset dir="${lib.dir}">
		<include name="*.jar" />
	      </fileset>
	    </unzip>
	    
	    <!-- add classes -->
	    <copy todir="${build.dir}">
	    	<fileset dir="${class.dir}" includes="**" />
	        <fileset dir="${basedir}" includes="${resource.dir}/**" />
	    </copy>
	    
	    <!-- construct the jar -->
	    <jar destfile="${jarname.cl.conc}-${version}.jar" 
	         basedir="${build.dir}">
	      <manifest>
		<attribute name="Main-Class" 
			   value="${main.class.cl.conc}" />
	      </manifest>
	    </jar>
	  </target>
	  	
</project>
